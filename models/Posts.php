<?php

namespace app\models;

use Yii;
use yii\db\ActiveRecord;


class Posts extends ActiveRecord
{
    public $number;
    public $link;

    public static function tableName(){
        return 'bl_posts'; // TODO: Change the autogenerated stub
    }

    public function afterFind()
    {
        parent::afterFind(); // TODO: Change the autogenerated stub
        $this->date = date("F j, Y",  strtotime($this->date));

//        $this->intro_text = $this->replaceContent($this->intro_text);
//        $this->full_text = $this->replaceContent($this->full_text);

        $this->img = Yii::$app->homeUrl ."images/posts/" . $this->img;
        if(Yii::$app->controller->id == 'blog' && Yii::$app->controller->action->id == 'releases'){
            $this->link = Yii::$app->urlManager->createUrl(["blog/release-single", "id" => $this->id]);
        } else {
            $this->link = Yii::$app->urlManager->createUrl(["blog/view", "id" => $this->id]);
        }
    }

    public function replaceContent($text){
        $this->youtube($text);
//        $this->flowplayer($text);
        return $text;
    }

    private function youtube($text){
        if(strpos($text, "youtube") === false){
            return $text;
        }
        $reg = '/{youtube: ([\w-_]*)?, (\d*)?, (\d*)?/i';
        $text = preg_replace($reg, str_replace(array("%name%, %width%, %height%"), array("\\1", "\\2", "\\3"), file_get_contents(Yii::$app->basePath.Yii::$app->params["dir_tmpl"]."youtube.tpl")), $text);
        return $text;
    }

//    private function flowplayer($text){
//        if(strpos($text, "flowplayer") === false){
//            return $text;
//        }
//        $reg = '/{flowplayer: ([\w-_]*)?, (\d*)?, (\d*)?/i';
//        $text = preg_replace($reg, str_replace(array("%name%, %width%, %height%"), array("\\1", "\\2", "\\3"), file_get_contents(Yii::$app->basePath.Yii::$app->params["dir_tmpl"]."flowplayer.tpl")), $text);
//        return $text;
//    }

    public static function setNumbers( $posts, $all_the_posts ){
        $all_releases = Posts::find()->where(['is_release' => 1])->orderBy(['date' => SORT_DESC])->all();
        $number = count($all_releases);
        foreach ($all_releases as $release){
            foreach ($all_the_posts as $post) {
                if($post->id == $release->id){
                    $post->number = $number;
                    $number--;
                }
            }
        }
        foreach ($posts as $page_post){
            foreach($all_the_posts as $numbered_post){
                if($page_post->id == $numbered_post->id){
                    $page_post->number = $numbered_post->number;
                }
            }
        }
    }

}